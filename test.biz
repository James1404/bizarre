fn factorial(n: i32) i32 {
      return if x < 2 {
             1
      } else {
             n * factorial(n - 1)
      };
};

const r = comptime fn() void {};

const x = fn() i32 { 25 } ();

/*
Types:
 - i8, i16, i32, i64, isize,
 - u8, u16, u32, u64, usize,
 - f32, f64,
 - bool,
 - string,
 - Array: [type;size],
 - Slice: [type],
 - Tuple: (i32, f32, string, bool, struct {}),
 - any,
 - comptime only types:
   - type,
*/

const doubleTwice = fn(n: i32) i32 {
      var a = n * 2;
      a = a * 2;
      return a;
};

/*

this is turned into

*----------*
| no params| ---+
| void     |    |
*----------*    |
                |
                V
*-------------------*
|_1 = int(25);      |
|"a" =  a25;        |
|"a" = mul a 2;     |
|_2 = mul a 2;      |
|param _2;          |
|call "print"       |
*-------------------*

*/